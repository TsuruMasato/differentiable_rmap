# Number of footsteps
footstep_num: 16

# Regularization weight
reg_weight: 1e-6

# Adjacent regularization weight
adjacent_reg_weight: 1e-3

# Whether to switch left and right alternately (supported only in SE2)
# Suppose that the SVM model represents a reachable map from the right foot to the left foot.
alternate_lr: true

# Margin distance of collision avoidance [m]
collision_margin: 0.1

# QP objective weight for SVM inequality error
svm_ineq_weight: 1e6

# QP objective weight for collision avoidance inequality error
collision_ineq_weight: 1e6

# Vertices of foot marker
foot_vertices: [
  [-0.07, -0.035, 0.01],
  [-0.065, -0.04, 0.01],
  [0.06, -0.04, 0.01],
  [0.085, -0.02, 0.01],
  [0.085, 0.02, 0.01],
  [0.06, 0.04, 0.01],
  [-0.065, 0.04, 0.01],
  [-0.07, 0.035, 0.01]
  ]

# Foot shape configuration (used for collision avoidance with obstacles)
foot_shape_config:
  pose:
    translation: [0.0075, 0.0, 0.0]
  scale: [0.155, 0.08, 1e1]

# List of obstacle shape configuration
obst_shape_config_list:
  - pose:
      translation: [1.5, 0.0, 0.0]
    scale: [0.5, 1.5, 1e2]

# Rate in runLoop()
loop_rate: 5000

# Step interval to publish in runLoop()
publish_interval: 100

# Height of xy plane marker
svm_thre: -0.1

# Limit of configuration update in one step [m], [rad]
delta_config_limit: 0.005

# Initial sample pose
initial_sample_pose:
  translation: [0.0, 0.3, 0.0]

# Whether to predict on grid map
grid_map_prediction: false
